/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 03 06:09:52 UTC 2020
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.store.hibernate.HibernateSessionFactory;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import java.util.Map;
import javax.inject.Provider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.junit.runner.RunWith;
import org.xwiki.component.internal.RootComponentManager;
import org.xwiki.component.manager.ComponentManager;
import org.xwiki.context.Execution;
import org.xwiki.job.event.status.JobProgressManager;
import org.xwiki.query.WrappingQuery;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.query.internal.DefaultQueryExecutorManager;
import org.xwiki.query.internal.EscapeLikeParametersFilter;
import org.xwiki.query.internal.ScriptQuery;
import org.xwiki.query.internal.SecureQueryExecutorManager;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JobProgressManager jobProgressManager0 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Provider<RootComponentManager> provider0 = (Provider<RootComponentManager>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider0);
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "execution", (Object) execution0);
      JobProgressManager jobProgressManager1 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "progress", (Object) jobProgressManager1);
      HibernateSessionFactory hibernateSessionFactory0 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "sessionFactory", (Object) hibernateSessionFactory0);
      Injector.validateBean(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class);
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = new OrdinalParameterDescriptor[1];
      ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, (Map) null);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl(",hck.fd,sj", jobProgressManager0, sessionImplementor0, parameterMetadata0);
      SecureQueryExecutorManager secureQueryExecutorManager0 = new SecureQueryExecutorManager();
      ContextualAuthorizationManager contextualAuthorizationManager1 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(secureQueryExecutorManager0, (Class<?>) SecureQueryExecutorManager.class, "authorization", (Object) contextualAuthorizationManager1);
      DefaultQueryExecutorManager defaultQueryExecutorManager0 = new DefaultQueryExecutorManager();
      Provider<EscapeLikeParametersFilter> provider1 = (Provider<EscapeLikeParametersFilter>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultQueryExecutorManager0, (Class<?>) DefaultQueryExecutorManager.class, "componentManagerProvider", (Object) provider1);
      Provider<XWikiContext> provider2 = (Provider<XWikiContext>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultQueryExecutorManager0, (Class<?>) DefaultQueryExecutorManager.class, "namedQueryExecutorProvider", (Object) provider2);
      Injector.validateBean(defaultQueryExecutorManager0, (Class<?>) DefaultQueryExecutorManager.class);
      Injector.inject(secureQueryExecutorManager0, (Class<?>) SecureQueryExecutorManager.class, "defaultQueryExecutorManager", (Object) defaultQueryExecutorManager0);
      Injector.validateBean(secureQueryExecutorManager0, (Class<?>) SecureQueryExecutorManager.class);
      DefaultQuery defaultQuery0 = new DefaultQuery("queries.hbm.xml", ",,dc", secureQueryExecutorManager0);
      ScriptQuery scriptQuery0 = new ScriptQuery(defaultQuery0, (ComponentManager) null);
      scriptQuery0.bindValue("R");
      WrappingQuery wrappingQuery0 = new WrappingQuery(scriptQuery0);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(collectionFilterImpl0, wrappingQuery0);
  }
}
