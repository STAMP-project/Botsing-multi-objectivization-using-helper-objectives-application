/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 21 22:40:32 UTC 2020
 */

package org.joda.time.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Period;
import org.joda.time.ReadablePartial;
import org.joda.time.base.BaseSingleFieldPeriod;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSingleFieldPeriod_ESTest extends BaseSingleFieldPeriod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfSecond();
      DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfYear();
      ReadablePartial readablePartial0 = mock(ReadablePartial.class, new ViolatedAssumptionAnswer());
      doReturn((Chronology) null).when(readablePartial0).getChronology();
      doReturn(dateTimeFieldType0, dateTimeFieldType0, dateTimeFieldType0, dateTimeFieldType0, dateTimeFieldType1).when(readablePartial0).getFieldType(anyInt());
      doReturn(0).when(readablePartial0).getValue(anyInt());
      doReturn(2874, 2874, 2874, (-1984), 17).when(readablePartial0).size();
      Period period0 = Period.millis((-3521));
      // Undeclared exception!
      BaseSingleFieldPeriod.between(readablePartial0, readablePartial0, period0);
  }
}
