/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Apr 03 21:50:47 UTC 2020
 */

package org.xwiki.rendering.internal.parser;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class DefaultContentParser_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.xwiki.rendering.internal.parser.DefaultContentParser"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultContentParser_ESTest_scaffolding.class.getClassLoader() ,
      "com.xpn.xwiki.XWikiException",
      "org.xwiki.rendering.parser.ParseException",
      "org.xwiki.display.internal.DocumentDisplayer",
      "org.xwiki.rendering.block.XDOM",
      "org.xwiki.component.phase.Initializable",
      "org.xwiki.bridge.DocumentModelBridge",
      "org.xwiki.model.internal.reference.AbstractStringEntityReferenceSerializer",
      "org.suigeneris.jrcs.rcs.Version",
      "org.dom4j.Node",
      "org.xwiki.model.reference.EntityReference",
      "org.xwiki.rendering.internal.parser.DefaultContentParser",
      "org.xwiki.model.reference.SpaceReference",
      "com.xpn.xwiki.store.XWikiStoreInterface",
      "com.xpn.xwiki.objects.classes.ClassInterface",
      "org.xwiki.model.internal.reference.DefaultSymbolScheme",
      "org.apache.commons.lang3.StringUtils",
      "com.xpn.xwiki.objects.ObjectInterface",
      "com.xpn.xwiki.objects.BaseCollection",
      "org.xwiki.rendering.syntax.Syntax",
      "org.xwiki.component.annotation.Role",
      "org.apache.velocity.context.Context",
      "org.xwiki.model.internal.reference.LocalStringEntityReferenceSerializer",
      "org.xwiki.component.manager.CompatibilityComponentManager",
      "org.xwiki.rendering.listener.HeaderLevel",
      "org.xwiki.model.EntityType",
      "org.xwiki.rendering.parser.ContentParser",
      "org.xwiki.model.reference.EntityReferenceSerializer",
      "org.xwiki.rendering.block.MetaDataBlock",
      "org.xwiki.rendering.parser.Parser",
      "org.xwiki.component.internal.AbstractEntityComponentManager",
      "org.xwiki.model.internal.reference.LocalizedStringEntityReferenceSerializer",
      "org.xwiki.model.internal.reference.SymbolScheme",
      "org.xwiki.rendering.transformation.TransformationException",
      "org.xwiki.model.internal.reference.DefaultStringEntityReferenceSerializer",
      "org.xwiki.component.manager.ComponentManager",
      "com.xpn.xwiki.doc.LazyXWikiDocument",
      "com.xpn.xwiki.objects.PropertyInterface",
      "org.xwiki.component.internal.SpaceComponentManager",
      "com.xpn.xwiki.internal.xml.DOMXMLWriter",
      "org.xwiki.context.ExecutionContextException",
      "com.xpn.xwiki.objects.ElementInterface",
      "org.xwiki.rendering.block.AbstractBlock",
      "org.dom4j.Document",
      "com.xpn.xwiki.internal.xml.XMLWriter",
      "org.xwiki.query.QueryException",
      "org.xwiki.component.annotation.Component",
      "org.dom4j.io.XMLWriter",
      "org.xwiki.model.internal.reference.DefaultSymbolScheme$1",
      "org.xwiki.component.manager.ComponentLookupException",
      "org.xwiki.component.internal.multi.AbstractGenericComponentManager",
      "org.xwiki.rendering.block.Block",
      "org.xwiki.rendering.parser.MissingParserException",
      "org.xwiki.component.internal.ContextComponentManager",
      "org.dom4j.DocumentException",
      "org.xwiki.model.reference.DocumentReferenceResolver",
      "org.xwiki.rendering.transformation.RenderingContext",
      "com.xpn.xwiki.doc.XWikiDocumentCompatibilityAspect",
      "org.xwiki.model.reference.LocalDocumentReference",
      "org.suigeneris.jrcs.util.ToString",
      "org.xwiki.rendering.syntax.SyntaxType",
      "org.xwiki.rendering.renderer.printer.WikiPrinter",
      "org.xwiki.rendering.block.match.BlockMatcher",
      "com.xpn.xwiki.internal.cache.rendering.RenderingCache",
      "com.xpn.xwiki.objects.BaseObject",
      "org.dom4j.Branch",
      "org.xwiki.component.internal.multi.DelegateComponentManager",
      "com.xpn.xwiki.objects.BaseElement",
      "org.aspectj.lang.NoAspectBoundException",
      "org.xwiki.rendering.block.CompatibilityBlock",
      "com.xpn.xwiki.objects.CompatibilityObjectInterface",
      "org.xwiki.rendering.syntax.SyntaxFactory",
      "org.xwiki.localization.ContextualLocalizationManager",
      "org.xwiki.model.reference.ObjectReference",
      "org.xwiki.model.reference.DocumentReference",
      "org.xwiki.job.event.status.JobProgressManager",
      "com.xpn.xwiki.doc.XWikiDocument",
      "org.dom4j.Element",
      "org.xwiki.display.internal.Displayer",
      "org.xwiki.model.reference.WikiReference",
      "com.xpn.xwiki.objects.classes.BaseClass"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("javax.inject.Provider", false, DefaultContentParser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.model.reference.EntityReferenceSerializer", false, DefaultContentParser_ESTest_scaffolding.class.getClassLoader()));
  }
}
