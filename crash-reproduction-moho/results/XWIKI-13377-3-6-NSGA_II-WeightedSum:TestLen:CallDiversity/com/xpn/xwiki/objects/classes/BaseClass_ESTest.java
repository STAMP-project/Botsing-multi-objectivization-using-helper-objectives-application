/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 01 13:17:22 UTC 2020
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.classes.BaseClass;
import com.xpn.xwiki.objects.meta.GroupsMetaClass;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.internal.reference.DefaultReferenceDocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseClass baseClass0 = new BaseClass();
      GroupsMetaClass groupsMetaClass0 = new GroupsMetaClass();
      groupsMetaClass0.addGroupsField("RQ", "RQ");
      ConcurrentHashMap<String, DefaultReferenceDocumentReferenceResolver> concurrentHashMap0 = new ConcurrentHashMap<String, DefaultReferenceDocumentReferenceResolver>();
      DefaultReferenceDocumentReferenceResolver defaultReferenceDocumentReferenceResolver0 = new DefaultReferenceDocumentReferenceResolver();
      EntityReferenceResolver<GroupsMetaClass> entityReferenceResolver0 = (EntityReferenceResolver<GroupsMetaClass>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultReferenceDocumentReferenceResolver0, (Class<?>) DefaultReferenceDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(defaultReferenceDocumentReferenceResolver0, (Class<?>) DefaultReferenceDocumentReferenceResolver.class);
      concurrentHashMap0.put("RQ", defaultReferenceDocumentReferenceResolver0);
      // Undeclared exception!
      groupsMetaClass0.fromMap((Map<String, ?>) concurrentHashMap0, (BaseCollection) baseClass0);
  }
}
