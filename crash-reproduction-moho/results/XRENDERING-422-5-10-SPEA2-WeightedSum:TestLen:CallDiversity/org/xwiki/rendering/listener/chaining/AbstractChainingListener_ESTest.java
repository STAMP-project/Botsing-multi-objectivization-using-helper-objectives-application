/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 07 00:18:50 UTC 2020
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.chaining.BlockStateChainingListener;
import org.xwiki.rendering.listener.chaining.ChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.GroupStateChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;
import org.xwiki.rendering.listener.chaining.LookaheadChainingListenerTest;
import org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractChainingListener_ESTest extends AbstractChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListenerChain listenerChain0 = new ListenerChain();
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain0);
      ListenerChain listenerChain1 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      doReturn("Tqu(hLxA Epu9v(~", (String) null).when(listenerChain1).toString();
      doReturn(emptyBlockChainingListener0, (ChainingListener) null).when(listenerChain1).getNextListener(nullable(java.lang.Class.class));
      BlockStateChainingListener blockStateChainingListener0 = new BlockStateChainingListener(listenerChain1);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      blockStateChainingListener0.beginDefinitionList(hashMap0);
      GroupStateChainingListener groupStateChainingListener0 = new GroupStateChainingListener(listenerChain0);
      ListenerChain listenerChain2 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      doReturn(",}jZO", "").when(listenerChain2).toString();
      doReturn(groupStateChainingListener0, emptyBlockChainingListener0).when(listenerChain2).getNextListener(nullable(java.lang.Class.class));
      MetaDataStateChainingListener metaDataStateChainingListener0 = new MetaDataStateChainingListener(listenerChain2);
      metaDataStateChainingListener0.endQuotationLine();
      LookaheadChainingListenerTest lookaheadChainingListenerTest0 = new LookaheadChainingListenerTest();
      metaDataStateChainingListener0.endMacroMarker("Tqu(hLxA Epu9v(~", hashMap0, "", true);
      ListenerChain listenerChain3 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(listenerChain3).toString();
      doReturn(blockStateChainingListener0).when(listenerChain3).getNextListener(nullable(java.lang.Class.class));
      LookaheadChainingListenerTest.TestChainingListener lookaheadChainingListenerTest_TestChainingListener0 = lookaheadChainingListenerTest0.new TestChainingListener(listenerChain3);
      Format format0 = Format.MONOSPACE;
      lookaheadChainingListenerTest_TestChainingListener0.endFormat(format0, hashMap0);
  }
}
