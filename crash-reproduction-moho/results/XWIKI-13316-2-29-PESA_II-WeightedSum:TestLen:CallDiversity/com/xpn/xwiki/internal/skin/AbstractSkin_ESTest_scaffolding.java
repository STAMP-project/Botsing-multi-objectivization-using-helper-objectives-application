/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 02 23:13:08 UTC 2020
 */

package com.xpn.xwiki.internal.skin;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class AbstractSkin_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.xpn.xwiki.internal.skin.AbstractSkin"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractSkin_ESTest_scaffolding.class.getClassLoader() ,
      "org.xwiki.rendering.parser.ParseException",
      "org.apache.commons.configuration.Configuration",
      "com.xpn.xwiki.internal.skin.InternalSkinConfiguration",
      "org.xwiki.component.phase.Initializable",
      "org.xwiki.component.internal.RoleHint",
      "org.xwiki.component.annotation.Component",
      "org.xwiki.component.manager.ComponentLookupException",
      "org.xwiki.skin.Resource",
      "com.xpn.xwiki.internal.skin.AbstractResource",
      "org.hibernate.loader.custom.sql.SQLCustomQuery",
      "com.xpn.xwiki.internal.skin.AbstractEnvironmentResource",
      "org.xwiki.rendering.syntax.Syntax",
      "org.apache.commons.lang.exception.NestableException",
      "org.hibernate.loader.custom.CustomQuery",
      "org.xwiki.component.manager.CompatibilityComponentManager",
      "com.xpn.xwiki.internal.skin.InternalSkinManager",
      "org.xwiki.skin.Skin",
      "org.xwiki.environment.Environment",
      "com.xpn.xwiki.internal.skin.AbstractSkin$1",
      "org.hibernate.loader.custom.sql.SQLQueryParser$ParserContext",
      "org.xwiki.rendering.internal.syntax.DefaultSyntaxFactory",
      "com.xpn.xwiki.internal.skin.AbstractSkin",
      "org.xwiki.skin.ResourceRepository",
      "com.xpn.xwiki.internal.skin.SkinEnvironmentResource",
      "org.xwiki.rendering.syntax.SyntaxFactory",
      "org.apache.commons.lang.exception.Nestable",
      "org.xwiki.component.manager.ComponentManager",
      "com.xpn.xwiki.XWikiContext",
      "org.xwiki.component.embed.GenericProvider",
      "org.apache.commons.configuration.ConfigurationException",
      "com.xpn.xwiki.internal.skin.EnvironmentSkin"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.xpn.xwiki.internal.skin.InternalSkinConfiguration", false, AbstractSkin_ESTest_scaffolding.class.getClassLoader()));
  }
}
