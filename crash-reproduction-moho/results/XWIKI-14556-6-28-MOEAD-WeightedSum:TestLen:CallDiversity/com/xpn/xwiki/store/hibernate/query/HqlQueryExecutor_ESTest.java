/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 09 11:10:36 UTC 2020
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import java.util.concurrent.ConcurrentSkipListMap;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.dbcp2.DelegatingConnection;
import org.apache.commons.dbcp2.PoolingConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.junit.runner.RunWith;
import org.xwiki.component.internal.RootComponentManager;
import org.xwiki.query.Query;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      ConcurrentSkipListMap<DefaultTableModel, RootComponentManager> concurrentSkipListMap0 = new ConcurrentSkipListMap<DefaultTableModel, RootComponentManager>();
      ParameterMetadata parameterMetadata0 = new ParameterMetadata((OrdinalParameterDescriptor[]) null, concurrentSkipListMap0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("quer#e", object0, (SessionImplementor) null, parameterMetadata0);
      ConcurrentSkipListMap<String, Object> concurrentSkipListMap1 = new ConcurrentSkipListMap<String, Object>();
      DelegatingConnection<PoolingConnection> delegatingConnection0 = (DelegatingConnection<PoolingConnection>) mock(DelegatingConnection.class, new ViolatedAssumptionAnswer());
      DelegatingConnection<DelegatingConnection<PoolingConnection>> delegatingConnection1 = new DelegatingConnection<DelegatingConnection<PoolingConnection>>(delegatingConnection0);
      DelegatingConnection<PoolingConnection> delegatingConnection2 = delegatingConnection1.getDelegate();
      PoolingConnection poolingConnection0 = new PoolingConnection(delegatingConnection2);
      concurrentSkipListMap1.put("j", poolingConnection0);
      Query query0 = mock(Query.class, new ViolatedAssumptionAnswer());
      doReturn((-1233)).when(query0).getLimit();
      doReturn(concurrentSkipListMap1).when(query0).getNamedParameters();
      doReturn((-1233)).when(query0).getOffset();
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(collectionFilterImpl0, query0);
  }
}
