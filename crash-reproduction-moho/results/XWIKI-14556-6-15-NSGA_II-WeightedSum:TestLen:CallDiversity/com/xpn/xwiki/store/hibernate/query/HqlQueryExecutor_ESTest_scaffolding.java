/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Apr 03 06:10:21 UTC 2020
 */

package com.xpn.xwiki.store.hibernate.query;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

@EvoSuiteClassExclude
public class HqlQueryExecutor_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(HqlQueryExecutor_ESTest_scaffolding.class.getClassLoader() ,
      "com.xpn.xwiki.XWikiException",
      "org.xwiki.component.phase.Initializable",
      "org.xwiki.query.QueryFilter",
      "org.xwiki.query.Query",
      "org.xwiki.model.reference.EntityReference",
      "org.hibernate.util.MarkerObject",
      "org.hibernate.engine.RowSelection",
      "org.xwiki.model.reference.SpaceReference",
      "com.xpn.xwiki.store.XWikiStoreInterface",
      "org.xwiki.component.phase.InitializationException",
      "com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor",
      "org.hibernate.NonUniqueResultException",
      "org.hibernate.Query",
      "org.hibernate.engine.SessionImplementor",
      "org.xwiki.query.SecureQuery",
      "org.hibernate.engine.query.OrdinalParameterDescriptor",
      "org.hibernate.impl.AbstractQueryImpl",
      "org.hibernate.LockOptions",
      "org.hibernate.impl.CollectionFilterImpl",
      "org.hibernate.ScrollableResults",
      "com.xpn.xwiki.store.XWikiHibernateStore",
      "org.hibernate.engine.query.ParameterMetadata",
      "org.hibernate.CacheMode",
      "org.xwiki.component.manager.ComponentManager",
      "org.hibernate.MappingException",
      "org.hibernate.engine.query.NamedParameterDescriptor",
      "org.hibernate.ScrollMode",
      "org.hibernate.HibernateException",
      "org.hibernate.QueryException",
      "org.xwiki.query.QueryParameter",
      "org.hibernate.impl.QueryImpl",
      "org.hibernate.QueryParameterException",
      "org.xwiki.query.QueryException",
      "org.xwiki.component.annotation.Component",
      "org.hibernate.Session",
      "org.xwiki.component.manager.ComponentLookupException",
      "org.hibernate.PropertyNotFoundException",
      "org.xwiki.query.internal.DefaultQuery",
      "org.xwiki.component.internal.ContextRootComponentManager",
      "org.hibernate.property.Getter",
      "com.xpn.xwiki.store.XWikiHibernateBaseStore$HibernateCallback",
      "org.xwiki.query.QueryExecutor",
      "org.hibernate.LockMode",
      "org.hibernate.FlushMode",
      "org.xwiki.query.internal.DefaultQueryParameter",
      "org.xwiki.component.internal.multi.DelegateComponentManager",
      "org.hibernate.engine.Mapping",
      "org.hibernate.engine.QueryParameters",
      "com.xpn.xwiki.XWikiContext",
      "com.xpn.xwiki.store.XWikiHibernateBaseStore",
      "org.hibernate.type.Type",
      "org.hibernate.transform.ResultTransformer"
    );
  } 
}
