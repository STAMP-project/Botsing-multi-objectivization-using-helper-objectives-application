/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Apr 05 20:38:37 UTC 2020
 */

package org.xwiki.rendering.internal.parser;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class DefaultContentParser_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.xwiki.rendering.internal.parser.DefaultContentParser"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultContentParser_ESTest_scaffolding.class.getClassLoader() ,
      "org.xwiki.rendering.parser.ParseException",
      "org.xwiki.rendering.block.XDOM",
      "org.xwiki.component.phase.Initializable",
      "org.hibernate.persister.entity.EntityPersister",
      "org.xwiki.model.internal.reference.AbstractStringEntityReferenceSerializer",
      "org.xwiki.model.reference.EntityReference",
      "org.hibernate.util.MarkerObject",
      "org.hibernate.Interceptor",
      "org.hibernate.engine.EntityKey",
      "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy",
      "org.xwiki.rendering.internal.parser.DefaultContentParser",
      "org.xwiki.model.internal.reference.DefaultSymbolScheme",
      "org.apache.commons.lang3.StringUtils",
      "org.hibernate.Transaction",
      "org.xwiki.rendering.syntax.Syntax",
      "org.xwiki.component.annotation.Role",
      "org.hibernate.loader.custom.CustomQuery",
      "org.xwiki.rendering.internal.parser.wikimodel.WikiModelStreamParser",
      "org.hibernate.Query",
      "org.hibernate.engine.SessionImplementor",
      "org.xwiki.model.EntityType",
      "org.xwiki.rendering.parser.ContentParser",
      "org.xwiki.model.reference.EntityReferenceSerializer",
      "org.xwiki.rendering.parser.Parser",
      "org.xwiki.rendering.block.MetaDataBlock",
      "org.xwiki.model.internal.reference.LocalizedStringEntityReferenceSerializer",
      "org.hibernate.ScrollableResults",
      "org.xwiki.model.internal.reference.SymbolScheme",
      "org.hibernate.SessionFactory",
      "org.hibernate.jdbc.Batcher",
      "org.hibernate.engine.LoadQueryInfluencers",
      "org.hibernate.CacheMode",
      "org.hibernate.collection.PersistentCollection",
      "org.hibernate.criterion.CriteriaSpecification",
      "org.xwiki.model.internal.reference.DefaultStringEntityReferenceSerializer",
      "org.xwiki.rendering.parser.HighlightParser",
      "org.hibernate.ScrollMode",
      "org.hibernate.HibernateException",
      "org.hibernate.persister.collection.CollectionPersister",
      "org.xwiki.rendering.internal.parser.doxia.AbstractDoxiaParser",
      "org.hibernate.engine.NonFlushedChanges",
      "org.xwiki.rendering.block.AbstractBlock",
      "org.hibernate.AssertionFailure",
      "org.hibernate.util.Cloneable",
      "org.hibernate.Criteria",
      "org.xwiki.component.annotation.Component",
      "org.xwiki.model.internal.reference.DefaultSymbolScheme$1",
      "org.xwiki.component.manager.ComponentLookupException",
      "org.xwiki.rendering.internal.parser.pygments.PygmentsParser",
      "org.xwiki.rendering.internal.parser.docbook.DocBookParser",
      "org.xwiki.rendering.block.Block",
      "org.hibernate.engine.query.sql.NativeSQLQuerySpecification",
      "org.xwiki.rendering.parser.MissingParserException",
      "org.hibernate.jdbc.ConnectionManager$Callback",
      "org.hibernate.collection.AbstractPersistentCollection",
      "org.xwiki.model.reference.LocalDocumentReference",
      "org.hibernate.jdbc.JDBCContext",
      "org.xwiki.rendering.parser.StreamParser",
      "org.hibernate.engine.SessionFactoryImplementor",
      "org.xwiki.rendering.parser.AbstractHighlightParser",
      "org.hibernate.EntityMode",
      "org.hibernate.engine.PersistenceContext",
      "org.hibernate.FlushMode",
      "org.hibernate.impl.CriteriaImpl",
      "org.hibernate.collection.PersistentSet",
      "org.hibernate.loader.CollectionAliases",
      "org.hibernate.cache.OptimisticCacheSource",
      "org.hibernate.engine.Mapping",
      "org.hibernate.engine.QueryParameters",
      "org.xwiki.model.reference.DocumentReference",
      "org.hibernate.LazyInitializationException",
      "org.hibernate.event.EventListeners",
      "org.xwiki.rendering.internal.parser.wikimodel.AbstractWikiModelParser",
      "org.xwiki.rendering.internal.parser.xhtml.XHTMLParser",
      "org.xwiki.model.reference.WikiReference",
      "org.hibernate.type.Type"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("javax.inject.Provider", false, DefaultContentParser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.hibernate.engine.SessionImplementor", false, DefaultContentParser_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.model.reference.EntityReferenceSerializer", false, DefaultContentParser_ESTest_scaffolding.class.getClassLoader()));
  }
}
