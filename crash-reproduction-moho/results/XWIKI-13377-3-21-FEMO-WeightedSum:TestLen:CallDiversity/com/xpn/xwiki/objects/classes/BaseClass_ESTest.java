/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 03 18:26:58 UTC 2020
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.BaseObject;
import com.xpn.xwiki.objects.meta.PageMetaClass;
import java.util.Map;
import java.util.concurrent.ConcurrentSkipListMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.internal.reference.DefaultReferenceDocumentReferenceResolver;
import org.xwiki.model.internal.reference.DefaultStringDocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseObject baseObject0 = new BaseObject();
      PageMetaClass pageMetaClass0 = new PageMetaClass();
      ConcurrentSkipListMap<String, DefaultReferenceDocumentReferenceResolver> concurrentSkipListMap0 = new ConcurrentSkipListMap<String, DefaultReferenceDocumentReferenceResolver>();
      DefaultReferenceDocumentReferenceResolver defaultReferenceDocumentReferenceResolver0 = new DefaultReferenceDocumentReferenceResolver();
      EntityReferenceResolver<DefaultStringDocumentReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultStringDocumentReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultReferenceDocumentReferenceResolver0, (Class<?>) DefaultReferenceDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(defaultReferenceDocumentReferenceResolver0, (Class<?>) DefaultReferenceDocumentReferenceResolver.class);
      concurrentSkipListMap0.put("classname", defaultReferenceDocumentReferenceResolver0);
      // Undeclared exception!
      pageMetaClass0.fromMap((Map<String, ?>) concurrentSkipListMap0, (BaseCollection) baseObject0);
  }
}
