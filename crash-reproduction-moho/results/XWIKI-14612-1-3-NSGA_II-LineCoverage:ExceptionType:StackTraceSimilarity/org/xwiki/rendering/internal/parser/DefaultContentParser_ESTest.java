/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 05 20:28:19 UTC 2020
 */

package org.xwiki.rendering.internal.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.inject.Provider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.component.internal.WikiComponentManager;
import org.xwiki.model.reference.EntityReferenceSerializer;
import org.xwiki.rendering.internal.parser.DefaultContentParser;
import org.xwiki.rendering.internal.parser.docbook.DocBookParser;
import org.xwiki.rendering.internal.parser.doxia.AbstractDoxiaParser;
import org.xwiki.rendering.internal.parser.twiki.TWikiParser;
import org.xwiki.rendering.parser.ResourceReferenceParser;
import org.xwiki.rendering.renderer.PrintRendererFactory;
import org.xwiki.rendering.syntax.Syntax;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DefaultContentParser_ESTest extends DefaultContentParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultContentParser defaultContentParser0 = new DefaultContentParser();
      Provider<WikiComponentManager> provider0 = (Provider<WikiComponentManager>) mock(Provider.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(provider0).get();
      Injector.inject(defaultContentParser0, (Class<?>) DefaultContentParser.class, "componentManagerProvider", (Object) provider0);
      EntityReferenceSerializer<String> entityReferenceSerializer0 = (EntityReferenceSerializer<String>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultContentParser0, (Class<?>) DefaultContentParser.class, "serializer", (Object) entityReferenceSerializer0);
      Injector.validateBean(defaultContentParser0, (Class<?>) DefaultContentParser.class);
      TWikiParser tWikiParser0 = new TWikiParser();
      ResourceReferenceParser resourceReferenceParser0 = mock(ResourceReferenceParser.class, new ViolatedAssumptionAnswer());
      Injector.inject(tWikiParser0, (Class<?>) AbstractDoxiaParser.class, "imageReferenceParser", (Object) resourceReferenceParser0);
      ResourceReferenceParser resourceReferenceParser1 = mock(ResourceReferenceParser.class, new ViolatedAssumptionAnswer());
      Injector.inject(tWikiParser0, (Class<?>) AbstractDoxiaParser.class, "linkReferenceParser", (Object) resourceReferenceParser1);
      DocBookParser docBookParser0 = new DocBookParser();
      ResourceReferenceParser resourceReferenceParser2 = mock(ResourceReferenceParser.class, new ViolatedAssumptionAnswer());
      Injector.inject(docBookParser0, (Class<?>) AbstractDoxiaParser.class, "imageReferenceParser", (Object) resourceReferenceParser2);
      ResourceReferenceParser resourceReferenceParser3 = mock(ResourceReferenceParser.class, new ViolatedAssumptionAnswer());
      Injector.inject(docBookParser0, (Class<?>) AbstractDoxiaParser.class, "linkReferenceParser", (Object) resourceReferenceParser3);
      Injector.inject(docBookParser0, (Class<?>) AbstractDoxiaParser.class, "plainParser", (Object) docBookParser0);
      PrintRendererFactory printRendererFactory0 = mock(PrintRendererFactory.class, new ViolatedAssumptionAnswer());
      Injector.inject(docBookParser0, (Class<?>) AbstractDoxiaParser.class, "plainRendererFactory", (Object) printRendererFactory0);
      Injector.validateBean(docBookParser0, (Class<?>) DocBookParser.class);
      Injector.inject(tWikiParser0, (Class<?>) AbstractDoxiaParser.class, "plainParser", (Object) docBookParser0);
      PrintRendererFactory printRendererFactory1 = mock(PrintRendererFactory.class, new ViolatedAssumptionAnswer());
      Injector.inject(tWikiParser0, (Class<?>) AbstractDoxiaParser.class, "plainRendererFactory", (Object) printRendererFactory1);
      Injector.validateBean(tWikiParser0, (Class<?>) TWikiParser.class);
      Syntax syntax0 = tWikiParser0.getSyntax();
      // Undeclared exception!
      defaultContentParser0.parse((String) null, syntax0);
  }
}
