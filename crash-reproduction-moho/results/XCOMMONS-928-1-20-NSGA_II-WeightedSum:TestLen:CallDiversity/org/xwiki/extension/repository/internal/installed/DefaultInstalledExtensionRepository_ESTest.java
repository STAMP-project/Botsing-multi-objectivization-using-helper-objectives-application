/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 01 11:17:24 UTC 2020
 */

package org.xwiki.extension.repository.internal.installed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.Hashtable;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.extension.DefaultExtensionDependency;
import org.xwiki.extension.ExtensionAuthor;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.ExtensionIssueManagement;
import org.xwiki.extension.ExtensionLicense;
import org.xwiki.extension.ExtensionScm;
import org.xwiki.extension.LocalExtension;
import org.xwiki.extension.repository.CoreExtensionRepository;
import org.xwiki.extension.repository.LocalExtensionRepository;
import org.xwiki.extension.repository.internal.installed.DefaultInstalledExtension;
import org.xwiki.extension.repository.internal.installed.DefaultInstalledExtensionRepository;
import org.xwiki.extension.wrap.WrappingInstalledExtension;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DefaultInstalledExtensionRepository_ESTest extends DefaultInstalledExtensionRepository_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultInstalledExtensionRepository defaultInstalledExtensionRepository0 = new DefaultInstalledExtensionRepository();
      CoreExtensionRepository coreExtensionRepository0 = mock(CoreExtensionRepository.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultInstalledExtensionRepository0, (Class<?>) DefaultInstalledExtensionRepository.class, "coreExtensionRepository", (Object) coreExtensionRepository0);
      ArrayDeque<ExtensionAuthor> arrayDeque0 = new ArrayDeque<ExtensionAuthor>();
      ArrayDeque<DefaultExtensionDependency> arrayDeque1 = new ArrayDeque<DefaultExtensionDependency>();
      Locale locale0 = Locale.CANADA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      ExtensionId extensionId0 = new ExtensionId("]", "vA|wpLyS");
      Vector<ExtensionLicense> vector0 = new Vector<ExtensionLicense>();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WrappingInstalledExtension<DefaultInstalledExtension> wrappingInstalledExtension0 = (WrappingInstalledExtension<DefaultInstalledExtension>) mock(WrappingInstalledExtension.class, new ViolatedAssumptionAnswer());
      doReturn(arrayDeque0).when(wrappingInstalledExtension0).getAuthors();
      doReturn("").when(wrappingInstalledExtension0).getCategory();
      doReturn(arrayDeque1).when(wrappingInstalledExtension0).getDependencies();
      doReturn("").when(wrappingInstalledExtension0).getDescription();
      doReturn(set0).when(wrappingInstalledExtension0).getFeatures();
      doReturn(extensionId0, (ExtensionId) null, (ExtensionId) null).when(wrappingInstalledExtension0).getId();
      doReturn((ExtensionIssueManagement) null).when(wrappingInstalledExtension0).getIssueManagement();
      doReturn(vector0).when(wrappingInstalledExtension0).getLicenses();
      doReturn("").when(wrappingInstalledExtension0).getName();
      doReturn(hashtable0).when(wrappingInstalledExtension0).getProperties();
      doReturn((ExtensionScm) null).when(wrappingInstalledExtension0).getScm();
      doReturn("").when(wrappingInstalledExtension0).getSummary();
      doReturn("").when(wrappingInstalledExtension0).getType();
      doReturn((String) null).when(wrappingInstalledExtension0).getWebSite();
      WrappingInstalledExtension<WrappingInstalledExtension<DefaultInstalledExtension>> wrappingInstalledExtension1 = new WrappingInstalledExtension<WrappingInstalledExtension<DefaultInstalledExtension>>(wrappingInstalledExtension0);
      LocalExtensionRepository localExtensionRepository0 = mock(LocalExtensionRepository.class, new ViolatedAssumptionAnswer());
      doReturn(wrappingInstalledExtension1).when(localExtensionRepository0).getLocalExtension(any(org.xwiki.extension.ExtensionId.class));
      Injector.inject(defaultInstalledExtensionRepository0, (Class<?>) DefaultInstalledExtensionRepository.class, "localRepository", (Object) localExtensionRepository0);
      // Undeclared exception!
      defaultInstalledExtensionRepository0.installExtension((LocalExtension) wrappingInstalledExtension1, "Failed to modify extension descriptor", false, (Map<String, Object>) null);
  }
}
