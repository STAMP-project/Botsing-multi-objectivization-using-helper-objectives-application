/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Apr 03 22:04:23 UTC 2020
 */

package org.xwiki.notifications.internal.email;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class AbstractMimeMessageIterator_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.xwiki.notifications.internal.email.AbstractMimeMessageIterator"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 


  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.http.conn.scheme.LayeredSocketFactory",
      "org.apache.http.impl.conn.HttpConnPool",
      "org.xwiki.model.reference.EntityReference",
      "org.xwiki.notifications.internal.email.NotificationUserIterator",
      "org.apache.http.impl.conn.SystemDefaultDnsResolver",
      "org.apache.http.HttpMessage",
      "org.apache.http.conn.ssl.SSLSocketFactory",
      "org.apache.http.pool.AbstractConnPool",
      "org.apache.http.conn.HttpInetSocketAddress",
      "org.apache.http.conn.ClientConnectionManager",
      "org.apache.http.conn.scheme.SchemeSocketFactory",
      "org.apache.http.impl.conn.SchemeRegistryFactory",
      "org.apache.http.HttpInetConnection",
      "org.apache.http.HttpRequest",
      "org.apache.http.pool.ConnPoolControl",
      "org.apache.http.pool.AbstractConnPool$1",
      "org.xwiki.wiki.manager.WikiManagerException",
      "org.apache.http.conn.ssl.AllowAllHostnameVerifier",
      "org.xwiki.notifications.NotificationManager",
      "org.apache.http.conn.socket.ConnectionSocketFactory",
      "org.apache.http.impl.conn.HttpPoolEntry",
      "org.apache.http.client.CredentialsProvider",
      "org.apache.http.params.SyncBasicHttpParams",
      "ucar.nc2.util.net.URLStreamHandlerFactory",
      "org.xwiki.wiki.descriptor.WikiDescriptorManager",
      "org.apache.http.conn.scheme.PlainSocketFactory",
      "org.apache.http.pool.RouteSpecificPool",
      "org.apache.http.pool.PoolEntry",
      "org.xwiki.stability.Unstable",
      "org.apache.http.impl.conn.HttpConnPool$InternalConnFactory",
      "org.apache.http.params.AbstractHttpParams",
      "org.apache.http.client.methods.HttpUriRequest",
      "org.xwiki.notifications.CompositeEvent",
      "org.apache.http.conn.ssl.AbstractVerifier",
      "org.xwiki.notifications.internal.email.PeriodicMimeMessageIterator",
      "org.apache.http.conn.ConnectTimeoutException",
      "org.apache.http.client.HttpClient",
      "org.xwiki.component.annotation.InstantiationStrategy",
      "org.xwiki.mail.internal.configuration.DefaultMailSenderConfiguration",
      "org.apache.http.impl.conn.PoolingClientConnectionManager",
      "org.xwiki.notifications.internal.email.AbstractMimeMessageIterator",
      "org.apache.http.HttpClientConnection",
      "org.xwiki.notifications.NotificationPreference",
      "org.apache.http.conn.ConnectionPoolTimeoutException",
      "org.apache.http.conn.ssl.SSLContexts",
      "org.apache.http.pool.ConnPool",
      "org.xwiki.bridge.DocumentAccessBridge",
      "org.xwiki.component.descriptor.ComponentInstantiationStrategy",
      "org.xwiki.model.reference.DocumentReference",
      "org.apache.http.protocol.HttpContext",
      "org.apache.http.params.HttpParams",
      "org.apache.http.impl.client.DefaultHttpClient",
      "org.xwiki.bridge.DocumentModelBridge",
      "org.apache.http.params.BasicHttpParams",
      "ucar.httpservices.HTTPSession$Settings",
      "org.xwiki.notifications.NotificationFormat",
      "org.apache.http.conn.scheme.LayeredSchemeSocketFactory",
      "org.apache.http.conn.scheme.SchemeLayeredSocketFactory",
      "org.apache.http.conn.ssl.StrictHostnameVerifier",
      "org.xwiki.component.annotation.Role",
      "org.apache.http.conn.ssl.X509HostnameVerifier",
      "org.xwiki.model.reference.EntityReferenceSerializer",
      "org.apache.http.conn.ssl.SSLInitializationException",
      "org.apache.http.params.HttpParamsNames",
      "ucar.httpservices.HTTPSession",
      "org.apache.http.util.Args",
      "org.apache.http.HttpEntity",
      "org.apache.http.pool.PoolEntryCallback",
      "org.apache.http.conn.socket.LayeredConnectionSocketFactory",
      "org.xwiki.model.reference.ObjectPropertyReference",
      "org.apache.http.conn.OperatedClientConnection",
      "org.apache.http.pool.ConnFactory",
      "org.apache.http.conn.scheme.Scheme",
      "org.apache.http.conn.ssl.BrowserCompatHostnameVerifier",
      "org.apache.http.conn.scheme.SocketFactory",
      "ucar.httpservices.HTTPException",
      "org.xwiki.component.annotation.Component",
      "org.apache.http.conn.DnsResolver",
      "org.apache.http.conn.ClientConnectionRequest",
      "org.xwiki.mail.MimeMessageFactory",
      "org.xwiki.notifications.email.NotificationEmailRenderer",
      "org.apache.http.conn.ClientConnectionOperator",
      "org.apache.http.impl.client.AbstractHttpClient",
      "org.xwiki.notifications.NotificationException",
      "ucar.httpservices.CustomSSLProtocolSocketFactory",
      "org.apache.http.conn.scheme.SchemeRegistry",
      "org.apache.http.impl.client.CloseableHttpClient",
      "org.xwiki.mail.MailSenderConfiguration",
      "org.apache.http.conn.ManagedClientConnection",
      "org.apache.http.conn.HttpRoutedConnection",
      "org.xwiki.wiki.descriptor.WikiDescriptor",
      "org.xwiki.model.reference.ObjectReference",
      "org.xwiki.model.reference.AttachmentReference",
      "org.apache.http.impl.conn.DefaultClientConnectionOperator",
      "org.xwiki.configuration.ConfigurationSource",
      "org.apache.http.conn.ConnectionReleaseTrigger",
      "org.apache.http.HttpConnection",
      "org.apache.http.conn.ManagedHttpClientConnection"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.xwiki.bridge.DocumentAccessBridge", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.configuration.ConfigurationSource", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.mail.MimeMessageFactory", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.model.reference.EntityReferenceSerializer", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.notifications.NotificationManager", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.notifications.email.NotificationEmailRenderer", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.xwiki.wiki.descriptor.WikiDescriptorManager", false, AbstractMimeMessageIterator_ESTest_scaffolding.class.getClassLoader()));
  }
}
